"""add name to invoice

Revision ID: 7d4eda8e6d6a
Revises: 7f83a8fd7f50
Create Date: 2025-01-12 16:57:05.251131

"""
from typing import Sequence, Union

from alembic import op
import sqlalchemy as sa
from sqlalchemy.dialects import mysql

# revision identifiers, used by Alembic.
revision: str = '7d4eda8e6d6a'
down_revision: Union[str, None] = '7f83a8fd7f50'
branch_labels: Union[str, Sequence[str], None] = None
depends_on: Union[str, Sequence[str], None] = None


def upgrade() -> None:
    # ### commands auto generated by Alembic - please adjust! ###
    op.add_column('invoices', sa.Column('name', sa.String(length=128), nullable=False))
    op.add_column('invoices', sa.Column('emission_date', sa.DateTime(), nullable=True))
    op.add_column('invoices', sa.Column('due_date', sa.DateTime(), nullable=True))
    op.drop_column('invoices', 'expiry_date')
    op.drop_column('invoices', 'emitted_date')
    op.drop_constraint('users_ibfk_1', 'users', type_='foreignkey')
    op.create_foreign_key(None, 'users', 'roles', ['role_id'], ['id'])
    # ### end Alembic commands ###


def downgrade() -> None:
    # ### commands auto generated by Alembic - please adjust! ###
    op.drop_constraint(None, 'users', type_='foreignkey')
    op.create_foreign_key('users_ibfk_1', 'users', 'roles', ['role_id'], ['id'], onupdate='RESTRICT', ondelete='RESTRICT')
    op.add_column('invoices', sa.Column('emitted_date', mysql.DATETIME(), nullable=True))
    op.add_column('invoices', sa.Column('expiry_date', mysql.DATETIME(), nullable=True))
    op.drop_column('invoices', 'due_date')
    op.drop_column('invoices', 'emission_date')
    op.drop_column('invoices', 'name')
    # ### end Alembic commands ###
